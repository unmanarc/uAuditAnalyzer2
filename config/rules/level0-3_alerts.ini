[Level 0-3 Alerts]
# Comparison functions Available:
# IS_EQUAL, REGEX_MATCH, CONTAINS, STARTS_WITH
# then, you can prepend I for insensitive case operations: IIS_EQUAL, IREGEX_MATCH, ICONTAINS, ISTARTS_WITH
# and/or prepend ! for negation !IREGEX_MATCH = Not contains regular expression (insensitive case)
# As function argument you can use:
# - $ for JSON Path resolution.
# - numbers
# - "strings" quoted strings...
Filter=ISTARTS_WITH($.INFO.key,"L0") || ISTARTS_WITH($.INFO.key,"L1") || ISTARTS_WITH($.INFO.key,"L2") || ISTARTS_WITH($.INFO.key,"L3")
# Actions: EXEC, ABORT
Action=EXEC
ActionBin=/usr/bin/sendxmppcmd.sh
ActionArgument[0]=sendxmppcmd.sh
# %#static.var%: static vars
# %$.json.path%: Json Path resolution styled
# %-.json.path%: Json Path resolution unstyled
# %N%: new line
# %%: % character.
ActionArgument[1]=%-.INFO.time% @%-.INFO.host%
ActionArgument[2]=> KEY=%-.INFO.key%
ActionArgument[3]=> EXEC_PATHS=%-.PATH[*].name%
ActionArgument[4]=> CWD=%-.CWD[*].cwd%
ActionArgument[5]=> UID=%-.SYSCALL[*].uid%
ActionArgument[6]=> PID=%-.SYSCALL[*].pid%
ActionArgument[7]=> PPID=%-.SYSCALL[*].ppid%
ActionArgument[8]=> CONTEXT=%-.SYSCALL[*].subj%
ActionArgument[9]=> SES=%-.SYSCALL[*].ses%
ActionArgument[10]=Executing %-.PROCTITLE[*].proctitle% 
ActionArgument[11]=-------------------------------
AppendNewLineToEarchArgument=true
